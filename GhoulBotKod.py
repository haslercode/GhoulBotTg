import telebot
import random

# –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather
TOKEN = "8180178854:AAFNyqvmDIgLCMXlQyohVjeQvW48vmKqHpM"
bot = telebot.TeleBot(TOKEN)

# —Å–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "!—Å—ä–µ–ª"
eat_phrases = [
    "{author} —Å—ä–µ–ª {target} ü©∏",
    "{author} –ø–µ—Ä–µ–≥—Ä—ã–∑ {target} üëπ",
    "{author} –ø–æ–≥–ª–æ—Ç–∏–ª {target} ‚ò†Ô∏è",
    "{author} —É–Ω–∏—á—Ç–æ–∂–∏–ª {target} ‚ö°",
    "{author} —Å–æ–∂—Ä–∞–ª {target} üï∑Ô∏è"
]

# —Å–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑ –¥–ª—è "!–∫–∞–≥—É–Ω–µ"
kagune_phrases = [
    "{author} —Ä–∞—Å–∫—Ä—ã–ª –∫–∞–≥—É–Ω–µ ü©∏",
    "{author} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∫–∞–≥—É–Ω–µ üëÅÔ∏è",
    "{author} –≤—ã–ø—É—Å—Ç–∏–ª –∫–∞–≥—É–Ω–µ ‚ö°",
    "{author} –ø—Ä–æ–±—É–¥–∏–ª –∫–∞–≥—É–Ω–µ üëπ",
    "{author} –≤—ã–∑–≤–∞–ª –∫–∞–≥—É–Ω–µ ‚ò†Ô∏è"
]

# —Å–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑ –¥–ª—è "!—Ä–µ–≥–µ–Ω"
regen_phrases = [
    "{author} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª {target} üíâ",
    "{author} —Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª {target} üåø",
    "{author} –∏—Å—Ü–µ–ª–∏–ª {target} ‚ú®",
    "{author} –æ–∂–∏–≤–∏–ª {target} üîÆ",
    "{author} –≤–µ—Ä–Ω—É–ª —Å–∏–ª—ã {target} üí™"
]

# –∫–æ–º–∞–Ω–¥–∞ "!—Å—ä–µ–ª"
@bot.message_handler(func=lambda m: m.text and m.text.startswith("!—Å—ä–µ–ª"))
def eat_command(message):
    parts = message.text.split(maxsplit=1)
    target = parts[1] if len(parts) > 1 else "–∫–æ–≥–æ-—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ"
    author = message.from_user.first_name
    phrase = random.choice(eat_phrases).format(author=author, target=target)
    bot.reply_to(message, phrase)

# –∫–æ–º–∞–Ω–¥–∞ "!–∫–∞–≥—É–Ω–µ"
@bot.message_handler(func=lambda m: m.text and m.text.startswith("!–∫–∞–≥—É–Ω–µ"))
def kagune_command(message):
    author = message.from_user.first_name
    phrase = random.choice(kagune_phrases).format(author=author)
    bot.reply_to(message, phrase)

# –∫–æ–º–∞–Ω–¥–∞ "!—Ä–µ–≥–µ–Ω"
@bot.message_handler(func=lambda m: m.text and m.text.startswith("!—Ä–µ–≥–µ–Ω"))
def regen_command(message):
    parts = message.text.split(maxsplit=1)
    target = parts[1] if len(parts) > 1 else "—Å–µ–±—è"
    author = message.from_user.first_name
    phrase = random.choice(regen_phrases).format(author=author, target=target)
    bot.reply_to(message, phrase)

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∫–æ–º–∞–Ω–¥—ã...")
bot.polling()
